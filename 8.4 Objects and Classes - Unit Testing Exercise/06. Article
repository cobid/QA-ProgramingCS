using NUnit.Framework;

using System;

namespace TestApp.UnitTests;

public class ArticleTests
{
    private Article _article;   
    [SetUp]
    
    public void Article()
    {
        _article = new Article();
    }
    

    // TODO: finish test
    [Test]
    public void Test_AddArticles_ReturnsArticleWithCorrectData()
    {
        // Arrange
        string[] listArticles =  {"Article Content Author", 
            "Article2 Content2 Author2", "Article3 Content3 Author3" }; 

        // Act

        Article result = _article.AddArticles(listArticles);

        // Assert
        Assert.That(result.ArticleList, Has.Count.EqualTo(3));
        Assert.That(result.ArticleList[0].Title, Is.EqualTo("Article"));
        Assert.That(result.ArticleList[1].Content, Is.EqualTo("Content2"));
        Assert.That(result.ArticleList[2].Author, Is.EqualTo("Author3"));
    }

    [Test]
    public void Test_GetArticleList_SortsArticlesByTitle()
    {
        Article listArticles = new Article()
        {
            ArticleList = new() 
            {
                new Article
                {
                    Author = "Mona",
                    Content = "Serengeti",
                    Title = "Africa",
                },
                new Article
                {
                    Author = "Bob",
                    Content = "Patagonia",
                    Title = "South America",
                },
                
            }

        };
        string expected = $"Africa - Serengeti: Mona{Environment.NewLine}" +
            $"South America - Patagonia: Bob";

        string result = _article.GetArticleList(listArticles, "title");

        Assert.That(expected, Is.EqualTo(result));

        
    }

    [Test]
    public void Test_GetArticleList_ReturnsEmptyString_WhenInvalidPrintCriteria()
    {
        Article listArticles = new Article()
        {
            ArticleList = new()
            {
                new Article
                {
                    Author = "Mona",
                    Content = "Serengeti",
                    Title = "Africa",
                },
                new Article
                {
                    Author = "Bob",
                    Content = "Patagonia",
                    Title = "South America",
                },

            }

        };
        string expected = string.Empty;

        string result = _article.GetArticleList(listArticles, "Name");

        Assert.That(expected, Is.EqualTo(result));
    }
}
